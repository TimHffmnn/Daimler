"use strict";
// SPDX-License-Identifier: MIT
// Copyright (c) 2020 Daimler TSS GmbH
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ConfigService_1 = require("../config/lib/ConfigService");
var diContext_1 = require("../di/lib/diContext");
var ErrorHandler_1 = require("../errorHandler/lib/ErrorHandler");
var I18nService_1 = require("../i18n/lib/I18nService");
var InterconnectionService_1 = require("../interconnection/InterconnectionService");
var RouterService_1 = require("../router/lib/RouterService");
function useFromDi(serviceId) {
    var diContainer = React.useContext(diContext_1.diContext);
    if (!diContainer.isBound(serviceId)) {
        throw new Error("Could not inject " + serviceId.toString() + " as it is currently not bound in this scope. Are you missing a Provider?");
    }
    return diContainer.get(serviceId);
}
exports.useFromDi = useFromDi;
exports.useConfig = function () { return useFromDi(ConfigService_1.ConfigService); };
exports.useDi = function () { return React.useContext(diContext_1.diContext); };
exports.useErrorHandler = function () { return useFromDi(ErrorHandler_1.ErrorHandler); };
exports.useI18n = function () { return useFromDi(I18nService_1.I18nService); };
exports.useInterconnection = function () { return useFromDi(InterconnectionService_1.InterconnectionService); };
exports.useRouter = function () { return useFromDi(RouterService_1.RouterService); };
/**
 * Compat/shim for backwards compatibility when using Hooks API.
 * @deprecated
 */
function withFtk(InnerComponent) {
    return InnerComponent;
}
exports.withFtk = withFtk;
//# sourceMappingURL=Hooks.js.map