"use strict";
// SPDX-License-Identifier: MIT
// Copyright (c) 2020 Daimler TSS GmbH
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var lodash_1 = require("lodash");
var React = require("react");
var BindToDi_1 = require("../../di/component/BindToDi");
var ErrorHandler_1 = require("../lib/ErrorHandler");
var Provider = /** @class */ (function (_super) {
    tslib_1.__extends(Provider, _super);
    function Provider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            error: undefined,
        };
        _this.bindServices = lodash_1.once(function (container) {
            _this.errorHandler = new ErrorHandler_1.ErrorHandler();
            container.bind(ErrorHandler_1.ErrorHandler).toConstantValue({
                handleError: function (message, stacktrace) {
                    _this.setState({
                        error: "Error: " + message,
                    });
                    _this.errorHandler.handleError(message, stacktrace);
                },
            });
        });
        return _this;
    }
    Provider.prototype.render = function () {
        return (React.createElement(BindToDi_1.default, { services: this.bindServices }, this.state.error ? React.createElement("div", { className: "error test-error" }, this.state.error) : this.props.children));
    };
    Provider.prototype.componentDidCatch = function (error) {
        this.setState({
            error: "Error: " + error.message,
        });
        this.errorHandler.handleError(error.message, error.stack);
    };
    return Provider;
}(React.Component));
exports.default = Provider;
//# sourceMappingURL=Provider.js.map