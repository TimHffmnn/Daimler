"use strict";
// SPDX-License-Identifier: MIT
// Copyright (c) 2020 Daimler TSS GmbH
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var lodash_1 = require("lodash");
var React = require("react");
var serviceIds_1 = require("../../core/serviceIds");
var BindToDi_1 = require("../../di/component/BindToDi");
var Registry_1 = require("../../util/Registry");
var I18nService_1 = require("../lib/I18nService");
var TranslationMap_1 = require("../lib/TranslationMap");
function createTranslationRegistry(translationMap) {
    var registry = new Registry_1.default();
    var translations = TranslationMap_1.default.convert(translationMap);
    lodash_1.forEach(translations, function (translation) {
        registry.add(translation.translationId, translation);
    });
    return registry;
}
var I18nProvider = /** @class */ (function (_super) {
    tslib_1.__extends(I18nProvider, _super);
    function I18nProvider() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.bindService = lodash_1.once(function (container) {
            container.bind(I18nService_1.I18nService).toDynamicValue(function (context) {
                var getLang = function () { return _this.props.lang; };
                var setLang = _this.props.setLang;
                var translationMap = context.container.get(serviceIds_1.default.translations);
                var registry = createTranslationRegistry(translationMap);
                return new I18nService_1.I18nService(registry, getLang, setLang, _this.props.intl);
            });
        });
        return _this;
    }
    I18nProvider.prototype.render = function () {
        return React.createElement(BindToDi_1.default, { services: this.bindService }, this.props.children);
    };
    return I18nProvider;
}(React.Component));
exports.default = I18nProvider;
//# sourceMappingURL=I18nProvider.js.map