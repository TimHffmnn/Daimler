"use strict";
// SPDX-License-Identifier: MIT
// Copyright (c) 2020 Daimler TSS GmbH
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = require("react");
var withInject_1 = require("../../di/hoc/withInject");
var TranslationProvider_1 = require("../component/TranslationProvider");
/**
 * Will bind a translation map to a component AND its children. That is, if you component
 * has children, they will have access to the translations in the given translation map.
 *
 * Note: This is just a shorthand for using the <TranslationProvider>.
 */
function composeTranslations(WrappedComponent, translationMap) {
    var Component = withInject_1.default(WrappedComponent);
    var I18nComponent = /** @class */ (function (_super) {
        tslib_1.__extends(I18nComponent, _super);
        function I18nComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        I18nComponent.prototype.render = function () {
            return (React.createElement(TranslationProvider_1.TranslationProvider, { translations: translationMap },
                React.createElement(Component, tslib_1.__assign({}, this.props))));
        };
        return I18nComponent;
    }(React.Component));
    return I18nComponent;
}
exports.default = composeTranslations;
//# sourceMappingURL=composeTranslations.js.map